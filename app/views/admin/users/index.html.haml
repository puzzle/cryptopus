-# encoding: utf-8

-#  Copyright (c) 2008-2017, Puzzle ITC GmbH. This file is part of
-#  Cryptopus and licensed under the Affero General Public License version 3 or later.
-#  See the COPYING file at the top-level directory or at
-#  https://github.com/puzzle/cryptopus.

%h1= t '.title'
- if policy(User::Human).new?
  = link_to t('admin.users.new.title'), new_admin_user_path, class: 'btn btn-primary pull-right'
%table.table.table-striped#team_table
  %tr
    %th= t '.username'
    %th= t '.name'
    %th= t '.last_login_at'
    %th= t '.last_login_from'
    %th= t '.provider_uid'
    %th= t '.role'
    %th{colspan: "3"}= t :actions
  - @users.each do |user|
    %tr{class: "#{cycle( 'odd', 'even' )}"}
      %td= user.username
      %td= user.label
      %td
        - if user.last_login_at
          = user.last_login_at.strftime('%d.%m.%Y, %H:%M')
      %td= user.last_login_from
      %td= user.provider_uid

      %td
        = Admin::UserRole::Dropdown.new(user, current_user).render
      %td
        - if policy(user).edit? || policy(user).resetpassword?
          = link_to image_pack_tag("edit.svg", class: 'icon'), edit_admin_user_path(user), class: 'action_icon'
        - if policy(user).destroy?
          = link_to image_pack_tag("remove.svg", class: 'icon'), '#',
            data: { last_teammember_teams_link: api_last_member_teams_path(user_id: user.id),
              user_id: user.id},
            class: 'delete_user_link action_icon'
- if User::Human.locked.count != 0
  %h1= t '.locked'
  %table.table.table-striped
    %tr
      %th{style: "width: 150px;"}= t '.username'
      %th= t '.name'
      %th= t '.action'
    - User::Human.locked.each do |user|
      %tr{class: "#{cycle( 'odd', 'even' )}"}
        %td= link_to user.username, edit_admin_user_path(user)
        %td= user.label
        %td.action_icon
          = link_to image_pack_tag("unlock.svg", class: 'icon'),  unlock_admin_user_path(user.id), title: t('.unlock')

%div{style: "height: 100px"}

#last_teammember_teams
  = render 'last_teammember_teams'
